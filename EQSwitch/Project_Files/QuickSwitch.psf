<File version="3.1">
  <FileID>0cf80a81-a76f-4b45-8366-12927a8a289d</FileID>
  <Preview>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
AIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADI
cQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCY
AMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAA
kJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlO
AACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMA
OU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAAS
EwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkA
ABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDH
CQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGIC
IMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBA
YgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgB
AEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADk
OAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhM
AOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAA
SEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwn
AABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmA
HCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJ
CYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQA
AIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDj
BAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEB
kOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAg
MQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwA
ACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBy
nAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQm
AHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAA
JCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4T
AAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARA
jhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDE
BECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIA
gMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhx
AgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgA
yHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQ
mADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4A
AJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5
TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABIT
ADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAA
EhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJ
AAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIg
xwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBi
AiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEA
QGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4
AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA
5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABI
TADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcA
AEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAc
JwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJ
gBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkNj5B0Bb5WCyS7FGAQBAWucOgG3Re+RwcSj1Feux
S7Ly4z0a6zcIAAASOVsAjI6OxKbNdbFhU13s33/QLuF27d4XK1ZWR39/vwAAYPKdLQAGBwejo6Mz
du7aU2yvXcLt2LknGhubis/DQAwWnwsBAMCkOlsAjF99DsbIyLB9AhseHhr/HAgAACbbuQLAPvkJ
AAAmnQDIfwIAgEknAPKfAABg0k0UAI1FAAwNjh889slvuPhcdPYKAAAm0UcDoDxcDrQPVK442w9b
Dis/F01d/ZXPjQAAYFJ8NAAqB0yx8mrT8tnpw18AADApJgoAy3sCAICLVgZAexEAu1uHKgeL5b9d
zQPRJQAAuBh33nnXztF3Ig6PROWq0i6DDUacjIhnnntRAABwYW666eZdTz/zfDzx5NOVK0q7PPbs
cy/EHVPuFAAAAAAAAAAAAFzh/uzP/j9vqOQaYaxcSwAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
$formEQSwitch_Load = {
	
	if (-not (Test-Path -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch))
	{
		New-Item -path HKCU:\SOFTWARE\EQSwitch -Force | Out-Null
	}
	$SavedWidth = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormWidth -ErrorAction SilentlyContinue
	$SavedHeight = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormHeight -ErrorAction SilentlyContinue
	$SavedPositionX = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormPositionX -ErrorAction SilentlyContinue
	$SavedPositionY = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormPositionY -ErrorAction SilentlyContinue
	$SavedFontSize = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty ListViewFontSize -ErrorAction SilentlyContinue
	$SavedOrder = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty ListViewOrder -ErrorAction SilentlyContinue
	if ($SavedWidth -ne $null) #set saved form width
	{
		$formEQSwitch.Width = $SavedWidth #set saved width
	}
	if ($SavedHeight -ne $null) #set saved form height
	{
		$formEQSwitch.Height = $SavedHeight #set saved height
	}
	if (($SavedPositionX -ne $null) -and ($SavedPositionY -ne $null)) #set saved form position
	{
		$formEQSwitch.Location = "$SavedPositionX, $SavedPositionY" #set saved position
	}
	if ($SavedFontSize -ne $null) #set saved font size
	{
		if ($SavedFontSize -match '7pt')
		{
			Set-SmallFont
		}
		elseif ($SavedFontSize -match '9pt')
		{
			Set-MediumFont
		}
		elseif ($SavedFontSize -match '11pt')
		{
			Set-LargeFont
		}
		elseif ($SavedFontSize -match '13pt')
		{
			Set-ExtraLargeFont
		}
		$textbox1.Font = $SavedFontSize
		$listview1.Font = $SavedFontSize
	}
	if (($SavedOrder -eq $null) -or ($SavedOrder -eq 'Ascending')) #set saved order
	{
		Set-Ascending
	}
	elseif ($SavedOrder -eq 'Descending')
	{
		Set-Descending
	}
	else
	{
		Set-None
	}
	#$tooltip1.InitialDelay = "20" #make tooltip show very fast default is 500ms
}

#region Control Helper Functions
function Update-ListViewColumnSort
{
<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.
	
	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.
	
	.PARAMETER ListView
		The ListView control to sort.
	
	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
	
	.PARAMETER SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Update-ListViewColumnSort -ListView $listview1 -ColumnIndex 0
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListView]$ListView,
		[Parameter(Mandatory = $true)]
		[int]$ColumnIndex,
		[System.Windows.Forms.SortOrder]$SortOrder = 'None'
	)
	
	if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
	try
	{
		[ListViewItemComparer] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
	}
	#endregion
	
	if ($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort() #Sort the items
	}
	else
	{
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}

function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.ListView]$ListView,
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		$Items,
		[int]$ImageIndex = -1,
		[string[]]$SubItems,
		$Group,
		[switch]$Clear)
	
	if ($Clear)
	{
		$ListView.Items.Clear();
	}
	
	$lvGroup = $null
	if ($Group -is [System.Windows.Forms.ListViewGroup])
	{
		$lvGroup = $Group
	}
	elseif ($Group -is [string])
	{
		#$lvGroup = $ListView.Group[$Group] # Case sensitive
		foreach ($groupItem in $ListView.Groups)
		{
			if ($groupItem.Name -eq $Group)
			{
				$lvGroup = $groupItem
				break
			}
		}
		
		if ($null -eq $lvGroup)
		{
			$lvGroup = $ListView.Groups.Add($Group, $Group)
		}
	}
	
	if ($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{
			$listitem = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if ($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if ($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if ($null -ne $SubItems)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if ($null -ne $lvGroup)
		{
			$listitem.Group = $lvGroup
		}
	}
}

#endregion

#region Show-Process
#https://community.idera.com/database-tools/powershell/powertips/b/tips/posts/bringing-window-in-the-foreground
function Show-Process($Process, [Switch]$Maximize)
{
	$sig = '
    [DllImport("user32.dll")] public static extern bool ShowWindowAsync(IntPtr hWnd, int nCmdShow);
    [DllImport("user32.dll")] public static extern int SetForegroundWindow(IntPtr hwnd);
  '
	
	if ($Maximize) { $Mode = 3 }
	else { $Mode = 4 }
	$type = Add-Type -MemberDefinition $sig -Name WindowAPI -PassThru
	$hwnd = $process.MainWindowHandle
	$null = $type::ShowWindowAsync($hwnd, $Mode)
	$null = $type::SetForegroundWindow($hwnd)
}
#endregion Show-Process

#region buttonup
function buttonup
{
	$this.Cursor = 'Default'
	$this.Enabled = $true
}
#endregion buttonup

#region buttondown
function buttondown
{
	$this.Cursor = 'WaitCursor'
	$this.Enabled = $false
}
#endregion buttondown

#region Set-FormSize
function Set-FormSize
{
	if (Test-Path -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch)
	{
		Set-ItemProperty -path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name FormWidth -Value $formEQSwitch.Width #set FormWidth
		Set-ItemProperty -path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name FormHeight -Value $formEQSwitch.Height #set FormHeight
	}
}
#endregion Set-FormSize

#region Set-FormPosition
function Set-FormPosition
{
	if (Test-Path -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch)
	{
		#Must use string with a negative number
		Set-ItemProperty -path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name FormPositionX -Value $formEQSwitch.Location.X -Type String #set FormPosition X
		Set-ItemProperty -path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name FormPositionY -Value $formEQSwitch.Location.y -Type String #set FormPosition Y
	}
}
#endregion Set-FormPosition

#region Set-ToolMenuOptions
function Set-Ascending
{
	$AscendingToolStripMenuItem.Checked = $true
	$DescendingToolStripMenuItem.Checked = $false
	$NoneToolStripMenuItem.Checked = $false
	$listview1.Sorting = 'Ascending'
}

function Set-Descending
{
	$AscendingToolStripMenuItem.Checked = $false
	$DescendingToolStripMenuItem.Checked = $true
	$NoneToolStripMenuItem.Checked = $false
	$listview1.Sorting = 'Descending'
}

function Set-None
{
	$AscendingToolStripMenuItem.Checked = $false
	$DescendingToolStripMenuItem.Checked = $false
	$NoneToolStripMenuItem.Checked = $true
	$listview1.Sorting = 'None'
}

function Set-SmallFont
{
	$smallToolStripMenuItem.Checked = $true
	$mediumToolStripMenuItem.Checked = $false
	$largeToolStripMenuItem.Checked = $false
	$extraLargeToolStripMenuItem.Checked = $false
	$textbox1.Font = 'Microsoft Sans Serif, 7pt'
	$listview1.Font = 'Microsoft Sans Serif, 7pt'
}

function Set-MediumFont
{
	$smallToolStripMenuItem.Checked = $false
	$mediumToolStripMenuItem.Checked = $true
	$largeToolStripMenuItem.Checked = $false
	$extraLargeToolStripMenuItem.Checked = $false
	$textbox1.Font = 'Microsoft Sans Serif, 9pt'
	$listview1.Font = 'Microsoft Sans Serif, 9pt'
}

function Set-LargeFont
{
	$smallToolStripMenuItem.Checked = $false
	$mediumToolStripMenuItem.Checked = $false
	$largeToolStripMenuItem.Checked = $true
	$extraLargeToolStripMenuItem.Checked = $false
	$textbox1.Font = 'Microsoft Sans Serif, 11pt'
	$listview1.Font = 'Microsoft Sans Serif, 11pt'
}

function Set-ExtraLargeFont
{
	$smallToolStripMenuItem.Checked = $false
	$mediumToolStripMenuItem.Checked = $false
	$largeToolStripMenuItem.Checked = $false
	$extraLargeToolStripMenuItem.Checked = $true
	$textbox1.Font = 'Microsoft Sans Serif, 13pt'
	$listview1.Font = 'Microsoft Sans Serif, 13pt'
}

#endregion Set-ToolMenuOptions

#region Show-MsgBox
function script:Show-MsgBox
{
	
	[CmdletBinding()]
	param (
		[Parameter(Position = 0, Mandatory = $true)]
		[string]$Prompt,
		[Parameter(Position = 1, Mandatory = $false)]
		[string]$Title = "",
		[Parameter(Position = 2, Mandatory = $false)]
		[ValidateSet("Information", "Question", "Critical", "Exclamation")]
		[string]$Icon = "Information",
		[Parameter(Position = 3, Mandatory = $false)]
		[ValidateSet("OKOnly", "OKCancel", "AbortRetryIgnore", "YesNoCancel", "YesNo", "RetryCancel")]
		[string]$BoxType = "OkOnly",
		[Parameter(Position = 4, Mandatory = $false)]
		[ValidateSet(1, 2, 3)]
		[int]$DefaultButton = 1
	)
	[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.VisualBasic") | Out-Null
	switch ($Icon)
	{
		"Question" { $vb_icon = [microsoft.visualbasic.msgboxstyle]::Question }
		"Critical" { $vb_icon = [microsoft.visualbasic.msgboxstyle]::Critical }
		"Exclamation" { $vb_icon = [microsoft.visualbasic.msgboxstyle]::Exclamation }
		"Information" { $vb_icon = [microsoft.visualbasic.msgboxstyle]::Information }
	}
	switch ($BoxType)
	{
		"OKOnly" { $vb_box = [microsoft.visualbasic.msgboxstyle]::OKOnly }
		"OKCancel" { $vb_box = [microsoft.visualbasic.msgboxstyle]::OkCancel }
		"AbortRetryIgnore" { $vb_box = [microsoft.visualbasic.msgboxstyle]::AbortRetryIgnore }
		"YesNoCancel" { $vb_box = [microsoft.visualbasic.msgboxstyle]::YesNoCancel }
		"YesNo" { $vb_box = [microsoft.visualbasic.msgboxstyle]::YesNo }
		"RetryCancel" { $vb_box = [microsoft.visualbasic.msgboxstyle]::RetryCancel }
	}
	switch ($Defaultbutton)
	{
		1 { $vb_defaultbutton = [microsoft.visualbasic.msgboxstyle]::DefaultButton1 }
		2 { $vb_defaultbutton = [microsoft.visualbasic.msgboxstyle]::DefaultButton2 }
		3 { $vb_defaultbutton = [microsoft.visualbasic.msgboxstyle]::DefaultButton3 }
	}
	$popuptype = $vb_icon -bor $vb_box -bor $vb_defaultbutton
	$ans = [Microsoft.VisualBasic.Interaction]::MsgBox($prompt, $popuptype, $title)
	return $ans
}
#endregion Show-MsgBox

$buttonRefresh_Click = {
	buttondown
	$listview1.Clear()
	$textbox1.Clear()
	$SavedOrder = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty ListViewOrder -ErrorAction SilentlyContinue
	$Script:RunningEQ = get-process -Name eqgame
	$unique = $RunningEQ | Select-Object -Property MainWindowTitle -Unique
	<#
	if ($RunningEQ.count -eq $unique) #check for duplicate process names
	{
		$ContainsDuplicates = $false
		$Script:RunningEQTitles = $RunningEQ.MainWindowTitle
	}
	else
	{
		$ContainsDuplicates = $true
		$list = @()
		foreach ($r in $RunningEQ)
		{			
			$list += [PSCUSTOMOBJECT] @{
				Name = $r.MainWindowTitle
				ID   = $r.Id
			}			
		}		
	}#>
	$Script:RunningEQTitles = $RunningEQ.MainWindowTitle
	$textbox1.AutoCompleteCustomSource.AddRange($RunningEQTitles)
	$labelRunningEQInstances.Text = "EQ Processes:  $($RunningEQTitles.Count)"
	#$maxlength = ($RunningEQTitles | Measure-Object -Maximum -Property Length).Maximum
	if (($SavedOrder -eq $null) -or ($SavedOrder -eq 'Ascending'))
	{
		Set-Ascending
	}
	elseif ($SavedOrder -eq 'Descending')
	{
		Set-Descending
	}
	else
	{
		Set-None
	}
	Add-ListViewItem -ListView $listview1 -Items $RunningEQTitles
	buttonup
}

$textbox1_KeyDown = [System.Windows.Forms.KeyEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	if ($_.KeyCode -eq 'Enter')
	{
		$ToonClick = $RunningEQ | Where-Object { $_.MainWindowTitle -eq $textbox1.Text }
		Show-Process -Process $ToonClick
	}
}

$textbox1_Click = {
	$textbox1.SelectAll()
}

$listview1_Click = {
	foreach ($item in $listview1.SelectedItems)
	{
		$textbox1.Text = $item.Text
		$ToonClick = $RunningEQ | Where-Object { $_.MainWindowTitle -eq $item.Text }
		Show-Process -Process $ToonClick
	}
}

$formEQSwitch_Resize = {
	Set-FormSize
}

$formEQSwitch_Move = {
	Set-FormPosition
}

$AscendingToolStripMenuItem_Click = {
	Set-Ascending
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value Ascending
}

$DescendingToolStripMenuItem_Click = {
	Set-Descending
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value Descending
}

$NoneToolStripMenuItem_Click = {
	Set-None
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value None
	$buttonRefresh.PerformClick() #required to refresh listview
}

$smallToolStripMenuItem_Click = {
	Set-SmallFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 7pt'
}

$mediumToolStripMenuItem_Click = {
	Set-MediumFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 9pt'
}

$largeToolStripMenuItem_Click = {
	Set-LargeFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 11pt'
}

$extraLargeToolStripMenuItem_Click = {
	Set-ExtraLargeFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 13pt'
}

$resetToolStripMenuItem_Click = {
	$formEQSwitch.Location = "0, 0"
	$formEQSwitch.Width = 161
	$formEQSwitch.Height = 723
	#Set-Ascending
	#Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value Ascending
	#Set-MediumFont
	#Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value Medium
	$AscendingToolStripMenuItem.PerformClick()
	$mediumToolStripMenuItem.PerformClick()
	Set-FormPosition
	Set-FormSize
}

$aboutToolStripMenuItem_Click = {
	Show-MsgBox -Title 'About EQSwitch' -Prompt 'EQSwitch is provided as-is, without any warranty.  Please report any bugs to Zuboo on PEQ.  EQSwitch does not function with duplicate process names.  Make sure every EQ process is named after your toon.' -BoxType OKOnly -Icon Information
}

$sourceLinkToolStripMenuItem_Click = {
	Start-process 'https://github.com/OverturnedStone/Everquest/tree/master/EQSwitch'
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>
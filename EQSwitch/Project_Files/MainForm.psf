<File version="3.1">
  <FileID>0cf80a81-a76f-4b45-8366-12927a8a289d</FileID>
  <Preview>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
AIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADI
cQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCY
AMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAA
kJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlO
AACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMA
OU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAAS
EwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkA
ABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDH
CQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGIC
IMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBA
YgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgB
AEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADk
OAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhM
AOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAA
SEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwn
AABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmA
HCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJ
CYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQA
AIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDj
BAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEB
kOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAg
MQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwA
ACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBy
nAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQm
AHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAA
JCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4T
AAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARA
jhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDE
BECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIA
gMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhx
AgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkJgA
yHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABITADlOAACQ
mADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAAEhMAOU4A
AJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJAAASEwA5
TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIgxwkAABIT
ADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBiAiDHCQAA
EhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEAQGICIMcJ
AAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4AQBAYgIg
xwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA5DgBAEBi
AiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABITADkOAEA
QGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcAAEhMAOQ4
AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAcJwAASEwA
5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJgBwnAABI
TADkOAEAQGICIMcJAAASEwA5TgAAkJgAyHECAIDEBECOEwAAJCYAcpwAACAxAZDjBAAAiQmAHCcA
AEhMAOQ4AQBAYgIgxwkAABITADlOAACQmADIcQIAgMQEQI4TAAAkJgBynAAAIDEBkOMEAACJCYAc
JwAASEwA5DgBAEBiAiDHCQAAEhMAOU4AAJCYAMhxAgCAxARAjhMAACQmAHKcAAAgMQGQ4wQAAIkJ
gBwnAABITADkOAEAQGICIMcJAAASEwA5TgAAkNj5B0Bb5WCyS7FGAQBAWucOgG3Re+RwcSj1Feux
S7Ly4z0a6zcIAAASOVsAjI6OxKbNdbFhU13s33/QLuF27d4XK1ZWR39/vwAAYPKdLQAGBwejo6Mz
du7aU2yvXcLt2LknGhubis/DQAwWnwsBAMCkOlsAjF99DsbIyLB9AhseHhr/HAgAACbbuQLAPvkJ
AAAmnQDIfwIAgEknAPKfAABg0k0UAI1FAAwNjh889slvuPhcdPYKAAAm0UcDoDxcDrQPVK442w9b
Dis/F01d/ZXPjQAAYFJ8NAAqB0yx8mrT8tnpw18AADApJgoAy3sCAICLVgZAexEAu1uHKgeL5b9d
zQPRJQAAuBh33nnXztF3Ig6PROWq0i6DDUacjIhnnntRAABwYW666eZdTz/zfDzx5NOVK0q7PPbs
cy/EHVPuFAAAAAAAAAAAAFzh/uzP/j9vqOQaYaxcSwAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
$formEQSwitch_Load = {
	
	if (-not (Test-Path -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch))
	{
		New-Item -path HKCU:\SOFTWARE\EQSwitch -Force | Out-Null
	}
	$SavedWidth = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormWidth -ErrorAction SilentlyContinue
	$SavedHeight = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormHeight -ErrorAction SilentlyContinue
	$SavedPositionX = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormPositionX -ErrorAction SilentlyContinue
	$SavedPositionY = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty FormPositionY -ErrorAction SilentlyContinue
	$SavedFontSize = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty ListViewFontSize -ErrorAction SilentlyContinue
	$SavedOrder = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty ListViewOrder -ErrorAction SilentlyContinue
	if ($SavedWidth -ne $null) #set saved form width
	{
		$formEQSwitch.Width = $SavedWidth #set saved width
	}
	if ($SavedHeight -ne $null) #set saved form height
	{
		$formEQSwitch.Height = $SavedHeight #set saved height
	}
	if (($SavedPositionX -ne $null) -and ($SavedPositionY -ne $null)) #set saved form position
	{
		$formEQSwitch.Location = "$SavedPositionX, $SavedPositionY" #set saved position
	}
	if ($SavedFontSize -ne $null) #set saved font size
	{
		if ($SavedFontSize -match '7pt')
		{
			Set-SmallFont
		}
		elseif ($SavedFontSize -match '9pt')
		{
			Set-MediumFont
		}
		elseif ($SavedFontSize -match '11pt')
		{
			Set-LargeFont
		}
		elseif ($SavedFontSize -match '13pt')
		{
			Set-ExtraLargeFont
		}
		$textbox1.Font = $SavedFontSize
		$listview1.Font = $SavedFontSize
	}
	if (($SavedOrder -eq $null) -or ($SavedOrder -eq 'Ascending')) #set saved order
	{
		Set-Ascending
	}
	elseif ($SavedOrder -eq 'Descending')
	{
		Set-Descending
	}
	elseif ($SavedOrder -eq 'Grouped')
	{
		Set-Grouped
	}
	<#
	if (Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group1 -ErrorAction SilentlyContinue)
	{
		$groupedToolStripMenuItem.Enabled = $true
	}
	else
	{
		$groupedToolStripMenuItem.Enabled = $false
	}#>
	#$tooltip1.InitialDelay = "20" #make tooltip show very fast default is 500ms	
	$buttonRefresh.PerformClick()
}

#region Control Helper Functions
function Update-ListViewColumnSort
{
<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.
	
	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.
	
	.PARAMETER ListView
		The ListView control to sort.
	
	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
	
	.PARAMETER SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Update-ListViewColumnSort -ListView $listview1 -ColumnIndex 0
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListView]$ListView,
		[Parameter(Mandatory = $true)]
		[int]$ColumnIndex,
		[System.Windows.Forms.SortOrder]$SortOrder = 'None'
	)
	
	if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
	try
	{
		[ListViewItemComparer] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
	}
	#endregion
	
	if ($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort() #Sort the items
	}
	else
	{
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}

function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.ListView]$ListView,
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		$Items,
		[int]$ImageIndex = -1,
		[string[]]$SubItems,
		$Group,
		[switch]$Clear)
	
	if ($Clear)
	{
		$ListView.Items.Clear();
	}
	
	$lvGroup = $null
	if ($Group -is [System.Windows.Forms.ListViewGroup])
	{
		$lvGroup = $Group
	}
	elseif ($Group -is [string])
	{
		#$lvGroup = $ListView.Group[$Group] # Case sensitive
		foreach ($groupItem in $ListView.Groups)
		{
			if ($groupItem.Name -eq $Group)
			{
				$lvGroup = $groupItem
				break
			}
		}
		
		if ($null -eq $lvGroup)
		{
			$lvGroup = $ListView.Groups.Add($Group, $Group)
		}
	}
	
	if ($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{
			$listitem = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if ($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if ($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if ($null -ne $SubItems)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if ($null -ne $lvGroup)
		{
			$listitem.Group = $lvGroup
		}
	}
}

#endregion

$buttonRefresh_Click = {
	buttondown
	$listview1.Clear()
	$textbox1.Clear()
	$SavedOrder = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty ListViewOrder -ErrorAction SilentlyContinue
	$Script:RunningEQ = get-process -Name eqgame
	$unique = $RunningEQ | Select-Object -Property MainWindowTitle -Unique
	<#
	if ($RunningEQ.count -eq $unique) #check for duplicate process names
	{
		$ContainsDuplicates = $false
		$Script:RunningEQTitles = $RunningEQ.MainWindowTitle
	}
	else
	{
		$ContainsDuplicates = $true
		$list = @()
		foreach ($r in $RunningEQ)
		{			
			$list += [PSCUSTOMOBJECT] @{
				Name = $r.MainWindowTitle
				ID   = $r.Id
			}			
		}		
	}#>
	$Script:RunningEQTitles = $RunningEQ.MainWindowTitle
	$textbox1.AutoCompleteCustomSource.AddRange($RunningEQTitles)
	$labelRunningEQInstances.Text = "EQ Processes:  $($RunningEQTitles.Count)"
	#$maxlength = ($RunningEQTitles | Measure-Object -Maximum -Property Length).Maximum
	if (($SavedOrder -eq $null) -or ($SavedOrder -eq 'Ascending'))
	{
		Set-Ascending
		Add-ListViewItem -ListView $listview1 -Items $RunningEQTitles
	}
	elseif ($SavedOrder -eq 'Descending')
	{
		Set-Descending
		Add-ListViewItem -ListView $listview1 -Items $RunningEQTitles
	}
	elseif ($SavedOrder -eq 'Grouped')
	{
		Set-Grouped
		$group1 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group1 -ErrorAction SilentlyContinue
		$group2 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group2 -ErrorAction SilentlyContinue
		$group3 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group3 -ErrorAction SilentlyContinue
		$group4 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group4 -ErrorAction SilentlyContinue
		$group5 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group5 -ErrorAction SilentlyContinue
		$group6 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group6 -ErrorAction SilentlyContinue
		$group7 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group7 -ErrorAction SilentlyContinue
		$group8 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group8 -ErrorAction SilentlyContinue
		$group9 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group9 -ErrorAction SilentlyContinue
		$group10 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group10 -ErrorAction SilentlyContinue
		$group11 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group11 -ErrorAction SilentlyContinue
		$group12 = Get-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch | Select-Object -ExpandProperty group12 -ErrorAction SilentlyContinue
		#if ($group1)
		if ($group1 -ne '')
		{
			foreach ($g1 in $group1)
			{
				if ($RunningEQTitles -contains $g1)
				{
					Add-ListViewItem -ListView $listview1 -Items $g1 -Group Group1
				}
			}
		}
		
		if ($group2 -ne '')
		{
			foreach ($g2 in $group2)
			{
				if ($RunningEQTitles -contains $g2)
				{
					Add-ListViewItem -ListView $listview1 -Items $g2 -Group Group2
				}
			}
		}
		
		if ($group3 -ne '')
		{
			foreach ($g3 in $group3)
			{
				if ($RunningEQTitles -contains $g3)
				{
					Add-ListViewItem -ListView $listview1 -Items $g3 -Group Group3
				}
			}
		}
		
		if ($group4 -ne '')
		{
			foreach ($g4 in $group4)
			{
				if ($RunningEQTitles -contains $g4)
				{
					Add-ListViewItem -ListView $listview1 -Items $g4 -Group Group4
				}
			}
		}
		
		if ($group5 -ne '')
		{
			foreach ($g5 in $group5)
			{
				if ($RunningEQTitles -contains $g5)
				{
					Add-ListViewItem -ListView $listview1 -Items $g5 -Group Group5
				}
			}
		}
		
		if ($group6 -ne '')
		{
			foreach ($g6 in $group6)
			{
				if ($RunningEQTitles -contains $g6)
				{
					Add-ListViewItem -ListView $listview1 -Items $g6 -Group Group6
				}
			}
		}
		
		if ($group7 -ne '')
		{
			foreach ($g7 in $group7)
			{
				if ($RunningEQTitles -contains $g7)
				{
					Add-ListViewItem -ListView $listview1 -Items $g7 -Group Group7
				}
			}
		}
		
		if ($group8 -ne '')
		{
			foreach ($g8 in $group8)
			{
				if ($RunningEQTitles -contains $g8)
				{
					Add-ListViewItem -ListView $listview1 -Items $g8 -Group Group8
				}
			}
		}
		
		if ($group9 -ne '')
		{
			foreach ($g9 in $group9)
			{
				if ($RunningEQTitles -contains $g9)
				{
					Add-ListViewItem -ListView $listview1 -Items $g9 -Group Group9
				}
			}
		}
		
		if ($group10 -ne '')
		{
			foreach ($g10 in $group10)
			{
				if ($RunningEQTitles -contains $g10)
				{
					Add-ListViewItem -ListView $listview1 -Items $g10 -Group Group10
				}
			}
		}
		
		if ($group11 -ne '')
		{
			foreach ($g11 in $group11)
			{
				if ($RunningEQTitles -contains $g11)
				{
					Add-ListViewItem -ListView $listview1 -Items $g11 -Group Group11
				}
			}
		}
		
		if ($group12 -ne '')
		{
			foreach ($g12 in $group12)
			{
				if ($RunningEQTitles -contains $g12)
				{
					Add-ListViewItem -ListView $listview1 -Items $g12 -Group Group12
				}
			}
		}		
	}	
	buttonup
}

$textbox1_KeyDown = [System.Windows.Forms.KeyEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	if ($_.KeyCode -eq 'Enter')
	{
		$ToonClick = $RunningEQ | Where-Object { $_.MainWindowTitle -eq $textbox1.Text }
		Show-Process -Process $ToonClick
	}
}

$textbox1_Click = {
	$textbox1.SelectAll()
}

$listview1_Click = {
	foreach ($item in $listview1.SelectedItems)
	{
		$textbox1.Text = $item.Text
		$ToonClick = $RunningEQ | Where-Object { $_.MainWindowTitle -eq $item.Text }
		Show-Process -Process $ToonClick
	}
}

$formEQSwitch_Resize = {
	Set-FormSize
}

$formEQSwitch_Move = {
	Set-FormPosition
}

$AscendingToolStripMenuItem_Click = {
	Set-Ascending
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value Ascending
	$buttonRefresh.PerformClick() #required to refresh listview
}

$DescendingToolStripMenuItem_Click = {
	Set-Descending
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value Descending
	$buttonRefresh.PerformClick() #required to refresh listview
}

$groupedToolStripMenuItem_Click = {
	Set-Grouped
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value 'Grouped'
	$buttonRefresh.PerformClick() #required to refresh listview
}

$smallToolStripMenuItem_Click = {
	Set-SmallFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 7pt'
}

$mediumToolStripMenuItem_Click = {
	Set-MediumFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 9pt'
}

$largeToolStripMenuItem_Click = {
	Set-LargeFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 11pt'
}

$extraLargeToolStripMenuItem_Click = {
	Set-ExtraLargeFont
	Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value 'Microsoft Sans Serif, 13pt'
}

$resetToolStripMenuItem_Click = {
	$formEQSwitch.Location = "0, 0"
	$formEQSwitch.Width = 161
	$formEQSwitch.Height = 723
	#Set-Ascending
	#Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewOrder -Value Ascending
	#Set-MediumFont
	#Set-ItemProperty -Path Registry::HKEY_CURRENT_USER\SOFTWARE\EQSwitch -Name ListViewFontSize -Value Medium
	$AscendingToolStripMenuItem.PerformClick()
	$mediumToolStripMenuItem.PerformClick()
	Set-FormPosition
	Set-FormSize
}

$aboutToolStripMenuItem_Click = {
	Show-MsgBox -Title 'About EQSwitch' -Prompt 'EQSwitch is provided as-is, without any warranty.  Please report any bugs to Zuboo on PEQ.  EQSwitch does not function with duplicate process names.  Make sure every EQ process is named after your toon.' -BoxType OKOnly -Icon Information
}

$sourceLinkToolStripMenuItem_Click = {
	Start-process 'https://github.com/OverturnedStone/Everquest/tree/master/EQSwitch'
}

$editGroupsToolStripMenuItem_Click = {
	if ((Show-ChildForm_PSF) -eq 'OK')
	{
		
	}
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>